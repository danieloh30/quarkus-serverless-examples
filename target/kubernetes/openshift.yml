---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.quarkus.io/commit-id: d18906217c6535eede1e33923e0e60cac16a5078
    app.quarkus.io/build-timestamp: 2021-08-17 - 04:07:23 +0000
  labels:
    app.kubernetes.io/name: quarkus-serverless-restapi
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
  name: quarkus-serverless-restapi
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: quarkus-serverless-restapi
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  type: ClusterIP
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: openjdk-11
spec:
  dockerImageRepository: registry.access.redhat.com/ubi8/openjdk-11
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.quarkus.io/commit-id: d18906217c6535eede1e33923e0e60cac16a5078
    app.quarkus.io/build-timestamp: 2021-08-17 - 04:07:23 +0000
  labels:
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/name: quarkus-serverless-restapi
    app.openshift.io/runtime: quarkus
  name: quarkus-serverless-restapi
spec: {}
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.quarkus.io/commit-id: d18906217c6535eede1e33923e0e60cac16a5078
    app.quarkus.io/build-timestamp: 2021-08-17 - 04:07:23 +0000
  labels:
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/name: quarkus-serverless-restapi
    app.openshift.io/runtime: quarkus
  name: quarkus-serverless-restapi
spec:
  output:
    to:
      kind: ImageStreamTag
      name: quarkus-serverless-restapi:1.0.0-SNAPSHOT
  source:
    dockerfile: "####\n# This Dockerfile is used in order to build a container that\
      \ runs the Quarkus application in JVM mode\n#\n# Before building the container\
      \ image run:\n#\n# ./mvnw package\n#\n# Then, build the image with:\n#\n# docker\
      \ build -f src/main/docker/Dockerfile.jvm -t quarkus/quarkus-serverless-restapi-jvm\
      \ .\n#\n# Then run the container using:\n#\n# docker run -i --rm -p 8080:8080\
      \ quarkus/quarkus-serverless-restapi-jvm\n#\n# If you want to include the debug\
      \ port into your docker image\n# you will have to expose the debug port (default\
      \ 5005) like this :  EXPOSE 8080 5005\n#\n# Then run the container using :\n\
      #\n# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG=\"true\"\
      \ quarkus/quarkus-serverless-restapi-jvm\n#\n###\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.4\
      \ \n\nARG JAVA_PACKAGE=java-11-openjdk-headless\nARG RUN_JAVA_VERSION=1.3.8\n\
      ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n# Install java and the run-java\
      \ script\n# Also set up permissions for user `1001`\nRUN microdnf install curl\
      \ ca-certificates ${JAVA_PACKAGE} \\\n    && microdnf update \\\n    && microdnf\
      \ clean all \\\n    && mkdir /deployments \\\n    && chown 1001 /deployments\
      \ \\\n    && chmod \"g+rwX\" /deployments \\\n    && chown 1001:root /deployments\
      \ \\\n    && curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh\
      \ -o /deployments/run-java.sh \\\n    && chown 1001 /deployments/run-java.sh\
      \ \\\n    && chmod 540 /deployments/run-java.sh \\\n    && echo \"securerandom.source=file:/dev/urandom\"\
      \ >> /etc/alternatives/jre/conf/security/java.security\n\n# Configure the JAVA_OPTIONS,\
      \ you can add -XshowSettings:vm to also display the heap size.\nENV JAVA_OPTIONS=\"\
      -Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\
      \n# We make four distinct layers so if there are application changes the library\
      \ layers can be re-used\nCOPY --chown=1001 target/quarkus-app/lib/ /deployments/lib/\n\
      COPY --chown=1001 target/quarkus-app/*.jar /deployments/\nCOPY --chown=1001\
      \ target/quarkus-app/app/ /deployments/app/\nCOPY --chown=1001 target/quarkus-app/quarkus/\
      \ /deployments/quarkus/\n\nEXPOSE 8080\nUSER 1001\n\nENTRYPOINT [ \"/deployments/run-java.sh\"\
      \ ]\n\n"
  strategy:
    dockerStrategy: {}
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.quarkus.io/commit-id: d18906217c6535eede1e33923e0e60cac16a5078
    app.quarkus.io/build-timestamp: 2021-08-17 - 04:07:23 +0000
  labels:
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/name: quarkus-serverless-restapi
    app.openshift.io/runtime: quarkus
  name: quarkus-serverless-restapi
spec:
  replicas: 1
  selector:
    app.kubernetes.io/name: quarkus-serverless-restapi
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-url: <<unknown>>
        app.quarkus.io/commit-id: d18906217c6535eede1e33923e0e60cac16a5078
        app.quarkus.io/build-timestamp: 2021-08-17 - 04:07:23 +0000
      labels:
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.kubernetes.io/name: quarkus-serverless-restapi
        app.openshift.io/runtime: quarkus
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: image-registry.openshift-image-registry.svc:5000/quarkus-serverless-restapi/quarkus-serverless-restapi:1.0.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          name: quarkus-serverless-restapi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - quarkus-serverless-restapi
        from:
          kind: ImageStreamTag
          name: quarkus-serverless-restapi:1.0.0-SNAPSHOT
      type: ImageChange
